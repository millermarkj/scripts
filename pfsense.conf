author "Mark Miller"
description "Upstart Script to run pfsense vm"

# Script variables
env VM="pfsense" # Set the name for the VM
env DATASET="calculon/vm/pfsense" # VM location

# Set up the environment and make sure the PCI
# stuff is pulled in.
pre-start script
  /opt/qemu/vfio-devices
end script

# We want to shutdown gracefully. It takes
# pfsense about 11 seconds to turn off. 
# We'll give the VM 20 seconds to turn off
# before we give up and let upstart kill it.
kill timeout 20

# This makes upstart look for TWO forks of
# the process, and thus follows the PID correctly.
expect daemon

# Start after the network is up
start on (started networking)

# Not so intuitive. 'rc' starts at system
# shutdown. So the stop stanzas start running
# when rc begins the shutdown process.
stop on starting rc RUNLEVEL=[016]

# Upstart has to follow a SINGLE PID, so
# the whole startup command has to go here.
exec /usr/bin/qemu-system-x86_64 \
-name $VM \
-daemonize \
-enable-kvm \
-cpu host \
-smp cores=2,threads=1,sockets=1 \
-m 1024 \
-net none \
-display none \
-vnc :2 \
-device pci-assign,host=04:00.0,multifunction=on \
-device pci-assign,host=04:00.1 \
-device pci-assign,host=05:00.0,multifunction=on \
-device pci-assign,host=05:00.1 \
-hda /$DATASET/disk.qcow2 \
-chardev socket,id=monitor,path=/$DATASET/monitor.sock,server,nowait \
-monitor chardev:monitor \
-chardev socket,id=serial0,path=/$DATASET/console.sock,server,nowait \
-serial chardev:serial0 \
-pidfile /$DATASET/$VM.pid

# Obviously you'll need an SSH key set up for this
# to work. You also need to comment out the 
# /root/.profile file on the pfsense root side so 
# that you get a prompt instead of the default menu.
pre-stop script
  ssh $VM "/sbin/shutdown -p now"
  sleep 10
end script
